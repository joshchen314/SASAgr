libname AGR  'G:\SS\';

/*
AGR.AGR099_ML_RAW01;
AGR.AGR094_ML_RAW01;---------94年農牧業-----------------------------094-----------------
AGR.AGR089_ML_RAW01;
*/
/*
ML9901
ML9401
ML8901
*/



DATA  ML9901(keep=state year y_icm x1_age x2_edu x3_sex x4_pr x5_lnd x6_pl sales manu rec  );   /*-----------------099----------------*/
SET AGR.AGR099_ML_RAW01;
PROC SORT NODUPKEY; BY state; run;

DATA  ML9401(keep=state year y_icm x1_age x2_edu x3_sex x4_pr x5_lnd x6_pl sales manu rec    );    /*-----------------094-----------------*/
SET AGR.AGR094_ML_RAW01;
 PROC SORT NODUPKEY; BY state;run;

DATA  ML8901(keep=state year y_icm x1_age x2_edu x3_sex x4_pr x5_lnd x6_pl sales manu rec    );    /*-----------------089-----------------*/
SET AGR.AGR089_ML_RAW01;
 PROC SORT NODUPKEY; BY state;run;






/* RAW */
/*            2010 DATA     ： AGR.AGR099_ML_RAW01                 */
/*            2005 DATA     ： AGR.AGR094_ML_RAW01                 */
/*            2000 DATA     ： AGR_89.BASIC89                                   */
/* COOK */
/*            2010 DATA     ： ML9901                 */
/*            2005 DATA     ： ML9401                 */
/*            2000 DATA     ： ML8901                 */


/*       設定處理 2010年 門檻所得      */
DATA ML9901_CK;
SET ML9901;
IF C01010199 IN (1,2,3,4,5) THEN DELETE;
if y_icm>=2260.001 then bton=1;
if bton=1 then output;
RUN;



/*            合併成 PANEL DATA         */
 		/*            1.  只取 STATE         */
DATA ML9901_m(keep=state);/*-------------MERGEMERGEMERGE-----------------------MERGE-------------MERGEMERGEMERGE-------------------*/
   set ML9901_CK;run;
DATA ML9401_m(keep=state);
   set ML9401;run;
DATA ML8901_m(keep=state);
   set ML8901;run;
 		/*            2.  比對 2010年門檻所得 以上的名單         */
DATA ML_9989_m;
    MERGE ML9901_m(IN=A)  ML8901_m(IN=B);
	BY state;
	IF A  & B THEN OUTPUT;run;
 PROC SORT NODUPKEY; BY state;run;
DATA A1_9994_m;/*****/
    MERGE ML_9989_m(IN=A)  ML9401_m(IN=B) ;
	BY state;
	IF A  & B THEN OUTPUT;run;
 PROC SORT NODUPKEY; BY state;run;
		/*            3.  each year         */
DATA ML9902;
    MERGE ML9901(IN=A)  A1_9994_m(IN=B);
	BY state;
	IF A  & B THEN OUTPUT;run;
DATA ML9402;
    MERGE ML9401(IN=A)  A1_9994_m(IN=B);
	BY state;
	IF A  & B THEN OUTPUT;run;
DATA ML8902;
    MERGE ML8901(IN=A)  A1_9994_m(IN=B);
	BY state;
	IF A  & B THEN OUTPUT;run;


 		/*            4.  合起來 to get panel data： 2000, 2005, 2010         */
data A1_9994_all;
   set ML9902 ML9402 ML8902;run;
PROC SORT; BY state year;/*-------------MERGEMERGEMERGE-----------------------MERGE-------------MERGEMERGEMERGE-----------------------*/
 		/*            4.  輸出 名單成 CSV         */





proc export
  data = A1_9994_all
  outfile = 'G:\SAS_DATA\A1_9994.csv'
  dbms = csv
  replace;
run;
data A1_9994_CK(KEEP=state year y_icm x1_age x2_edu x4_pr x5_lnd x6_pl);
   set A1_9994_all;
proc export
  data = A1_9994_CK
  outfile = 'G:\SAS_DATA\A1_9994_CK.csv'
  dbms = csv
  replace;
run;

proc SUMMARY DATA= ML9901;
VAR Y_ICM;
OUTPUT OUT= ZML9901 SUM=sY_ICM;
proc SUMMARY DATA=ML9401;
VAR Y_ICM;
OUTPUT OUT= ZML9401 SUM=sY_ICM;
proc SUMMARY DATA=ML8901;
VAR Y_ICM;
OUTPUT OUT= ZML8901 SUM=sY_ICM;
RUN;

/* RAW */
/*            2010 DATA     ： AGR.AGR099_ML_RAW01                 */
/*            2005 DATA     ： AGR.AGR094_ML_RAW01                 */
/*            2000 DATA     ： AGR_89.BASIC89                                   */
/* COOK */
/*            2010 DATA     ： ML9901                 */
/*            2005 DATA     ： ML9401                 */
/*            2000 DATA     ： ML8901                 */
/*THRESHOLD*/
/*            2010 DATA     ： ML9902                 */
/*            2005 DATA     ： ML9402                 */
/*            2000 DATA     ： ML8902                 */
/*       ALL= A1_9994_all         */
/*
y_icm=INCOME99;
x1_age=C03210199_a;
x2_edu=C03310199;
=C03110199;
=pr_ck;
x5_lnd=C10100199/100;
x6_pl=PL99;*/


/*APPENDIX  SANDBOX: WHETHER THE DATA ARE SO TRUE OR NOT*/
/*
DATA ML9902;SET ML9902 ;N=1;  PROC SORT; BY y_icm; run;
DATA ML9402;SET ML9402 ;N=1;  PROC SORT; BY y_icm; run;
DATA ML8902;SET ML8902 ;N=1;  PROC SORT; BY y_icm; run;
PROC SUMMARY DATA=ML9902;
VAR N x1_age x2_edu x3_sex x4_pr;
OUTPUT OUT=ML9901_SUM SUM= N x1_age x2_edu x3_sex x4_pr;		RUN;
PROC SUMMARY DATA=ML9402;
VAR N x1_age x2_edu x3_sex x4_pr;
OUTPUT OUT=ML9401_SUM SUM= N x1_age x2_edu x3_sex x4_pr;		RUN;
PROC SUMMARY DATA=ML8902;
VAR N x1_age x2_edu x3_sex x4_pr;
OUTPUT OUT=ML8901_SUM SUM= N x1_age x2_edu x3_sex x4_pr;		RUN;


data ZML99_YN01(KEEP=y_acc_2010 N_acc_2010);
 set ML9901;
 y_icm_per=y_icm/197801181;
 N_PER=N/781398;
 retain  y_acc_2010 0;  
 y_acc_2010+lag(y_icm_per);
retain  N_acc_2010 0;  
 N_acc_2010+lag(N_per);
 run;
AXIS1 LABEL=('y_acc_2010') OFFSET=(0) ORDER=(0 TO 1 BY .25);
AXIS2 LABEL=('N_acc_2010') OFFSET=(0) ORDER=(0 TO 1 BY .25);
PROC GPLOT DATA=ZML99_YN01;
PLOT y_acc_2010*N_acc_2010 /VAXIS=AXIS2 HAXIS=AXIS1; run;

data ZML94_YN01(KEEP=y_acc_2005 N_acc_2005);
 set ML9401;
 y_icm_per=y_icm/157536625;
 N_PER=N/772286;
 retain  y_acc_2005 0;  
 y_acc_2005+lag(y_icm_per);
retain  N_acc_2005 0;  
 N_acc_2005+lag(N_per);
 run;
AXIS1 LABEL=('y_acc_2005') OFFSET=(0) ORDER=(0 TO 1 BY .25);
AXIS2 LABEL=('N_acc_2005') OFFSET=(0) ORDER=(0 TO 1 BY .25);
PROC GPLOT DATA=ZML94_YN01;
PLOT y_acc_2005*N_acc_2005 /VAXIS=AXIS2 HAXIS=AXIS1; run;

 data ZML89_YN01(KEEP=y_acc_2000 N_acc_2000);
 set ML8901;
 y_icm_per=y_icm/171199390;
 N_PER=N/725207;
 retain  y_acc_2000 0;  
 y_acc_2000+lag(y_icm_per);
retain  N_acc_2000 0;  
 N_acc_2000+lag(N_per);
 run;
AXIS1 LABEL=('y_acc_2000') OFFSET=(0) ORDER=(0 TO 1 BY .25);
AXIS2 LABEL=('N_acc_2000') OFFSET=(0) ORDER=(0 TO 1 BY .25);
PROC GPLOT DATA=ZML89_YN01;
PLOT y_acc_2000*N_acc_2000 /VAXIS=AXIS2 HAXIS=AXIS1; run;
*/
